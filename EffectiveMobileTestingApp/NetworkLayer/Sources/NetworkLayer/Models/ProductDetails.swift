//
// ProductDetails.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ProductDetails: Codable, JSONEncodable, Hashable {

    public var CPU: String?
    public var camera: String?
    public var capacity: [Int]?
    public var color: [String]?
    public var id: Int?
    public var images: [String]?
    public var isFavorites: Int?
    public var price: Double?
    public var rating: Double?
    public var sd: String?
    public var ssd: String?
    public var title: String?

    public init(CPU: String? = nil, camera: String? = nil, capacity: [Int]? = nil, color: [String]? = nil, id: Int? = nil, images: [String]? = nil, isFavorites: Int? = nil, price: Double? = nil, rating: Double? = nil, sd: String? = nil, ssd: String? = nil, title: String? = nil) {
        self.CPU = CPU
        self.camera = camera
        self.capacity = capacity
        self.color = color
        self.id = id
        self.images = images
        self.isFavorites = isFavorites
        self.price = price
        self.rating = rating
        self.sd = sd
        self.ssd = ssd
        self.title = title
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case CPU
        case camera
        case capacity
        case color
        case id
        case images
        case isFavorites
        case price
        case rating
        case sd
        case ssd
        case title
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(CPU, forKey: .CPU)
        try container.encodeIfPresent(camera, forKey: .camera)
        try container.encodeIfPresent(capacity, forKey: .capacity)
        try container.encodeIfPresent(color, forKey: .color)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(images, forKey: .images)
        try container.encodeIfPresent(isFavorites, forKey: .isFavorites)
        try container.encodeIfPresent(price, forKey: .price)
        try container.encodeIfPresent(rating, forKey: .rating)
        try container.encodeIfPresent(sd, forKey: .sd)
        try container.encodeIfPresent(ssd, forKey: .ssd)
        try container.encodeIfPresent(title, forKey: .title)
    }
}

